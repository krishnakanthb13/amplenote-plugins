| | |
|-|-|
|name|Active Plugin Info|
|icon|info|
|description|Get the List of Active Plugin Info + Its Available Options.|
|setting|Active Plugins List Note. \[Do not Edit!\]|
\

```
{
  async appOption(app) {
    // Filter notes based on Groups + tags
    let results = new Set();
	let notesGroupNames = new Set();
	const notesGroup = "plugin";
	// Filter notes based on empty notes + tags
	let notesG = await app.filterNotes({ group: notesGroup });
	for (const noteHandleG of notesG) {
		notesGroupNames.add(`- [${noteHandleG.name || "Untitled Note"}](https://www.amplenote.com/notes/${noteHandleG.uuid})`);
	}
	results = new Set(notesGroupNames);
	// console.log("Sorted notesG:", notesG);
	// console.log("Sorted notesGroupNames:", notesGroupNames);
	results = Array.from(results);
	const resultText = results.join("\n");
	// Generate the filename based on the current date and time
	const now = new Date();
	const YYMMDD = now.toISOString().slice(2, 10).replace(/-/g, '');
	const HHMMSS = now.toTimeString().slice(0, 8).replace(/:/g, '');

    // Active Plugin List Report
    const APLNoteName = `Active_Plugin_Info`;
    const APLTagName = ['-reports/-active-plugin-info'];
	const APLnoteUUID = await (async () => {
	  const existingUUID = await app.settings["Active Plugins List Note. [Do not Edit!]"];
	  if (existingUUID)
		  return existingUUID;
	  const newUUID = await app.createNote(APLNoteName, APLTagName);
	  await app.setSetting("Active Plugins List Note. [Do not Edit!]", newUUID);
	  return newUUID;
	})();
    const APLReport = resultText;
	await app.replaceNoteContent({ uuid: APLnoteUUID }, APLReport);

	const filename = `Active_Plugin_Info_${YYMMDD}_${HHMMSS}`;
	let noteUUID = await app.createNote(`${filename}`, ["-reports/-active-plugin-info"]);
	await app.replaceNoteContent({
		uuid: noteUUID
	}, resultText);
	// console.log("Inserted text into new note with UUID:", noteUUID);
  }
}
```



appOption
dailyJotOption
eventOption
imageOption
insertText
linkOption
linkTarget
noteOption
onEmbedCall
renderEmbed
replaceText
taskOption